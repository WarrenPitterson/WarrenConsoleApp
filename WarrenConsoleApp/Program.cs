using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading.Tasks;

namespace WarrenConsoleApp
{
    public class Program
    {
        public static  List<Problems> ListOfProblems = new List<Problems>();
        public static ProblemRepository ProblemRepository = new ProblemRepository();


        static void ShowSolutionById(int id)
        {
            var entity = ListOfProblems.SingleOrDefault(i => i.Id == id);

            Display(entity);

        }

        private static void Display(Problems entity) 
        {
            Console.WriteLine($"{entity.Id},\n{entity.Name},{entity.Description},{entity.Solution}");
        }

        static void Main(string[] args)
        {
            Console.WriteLine("Welcome to Warren's C# Skills Lab");
            LoadData();
            WelcomeMenu();
        }


        static void WelcomeMenu()
        {
            Console.WriteLine("1) Multiples of 3 & 5");
            Console.WriteLine("2) Even Fibonacci numbers");
            Console.WriteLine("3) Largest prime factor");
            Console.WriteLine("4) Largest palindrome product");
            Console.WriteLine("5) Smallest multiple");
            Console.WriteLine("6) Exit \n");
            Console.WriteLine("Select a number from the list above");

            UserOption();
        }

        static void UserOption()
        {
            var userInput = Console.ReadLine();
            Int32.TryParse(userInput, out int userInputInt);

            switch (userInputInt)
            {
                case 1:
                    Console.WriteLine();
                    ShowSolutionById(1);
                    Console.ReadLine();
                    break;
                case 2:
                    Console.WriteLine();
                    ShowSolutionById(2);
                    Console.ReadLine();
                    break;
                case 3:
                    Console.WriteLine();
                    ShowSolutionById(3);
                    Console.ReadLine();
                    break;
                case 4:
                    Console.WriteLine();
                    ShowSolutionById(4);
                    Console.ReadLine();
                    break;
                case 5:
                    Console.WriteLine();
                    ShowSolutionById(5);
                    Console.ReadLine();
                    break;
                case 6:
                    Environment.Exit(0);
                    break;
                default:
                    Console.Write("Select a number from the list above");
                    Console.ReadLine();
                    break;
            }
        }


        public static void LoadData() //WP - Move to repo
        {
            var problem1 = new Problems(1, "Multiples of 3 and 5",
                "If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23." +
                "Find the sum of all the multiples of 3 or 5 below 1000.",
                " Run a for loop for iterations up to 1000.\n"
                + "Run an if statement to see if the number generate is divisible by 3 or 5 with a remainder of 0.\n"
                + "If this is true, print the number \n\n\n" +
                "         function ThreeAndFive() { \n" +
                "              for (i = 0; i < 1000; i++)\n" +
                "                 {\n" +
                "              if (i % 3 === 0 || i % 5 === 0)\n" +
                "              console.log(i);\n" +
                "                 }\n" +
                "               }\n");

            

            var problem2 = new Problems(2, "Even Fibonacci numbers", "\nProblem 2: Even Fibonacci numbers\n" +
                                                                     "----------------------------------\n" +
                                                                     "Each new term in the Fibonacci sequence is generated by adding the previous two terms.\n " +
                                                                     "By starting with 1 and 2, the first 10 terms will be:\n\n" +
                                                                     "1, 2, 3, 5, 8, 13, 21, 34, 55, 89, \n\n" +
                                                                     "...By considering the terms in the Fibonacci sequence whose values do not exceed four million,\n" +
                                                                     "find the sum of the even-valued terms..\n\n" +
                                                                     "Press any key to see the answer",
                "            function Fibonnaci() { \n" +
                "              var a = 0\n" +
                "              var b = 0\n" +
                "              for (i = 0; i < 4000000; i++) {\n" +
                "                 total = a;\n" +
                "                 a = b;\n" +
                "                 b = total + b;\n" +
                "              if (total < 4000000 && total % 2 === 0) {\n" +
                "              sum =+ total;\n" +
                "                 }\n" +
                "              }\n" +
                "              console.log(i);\n" +
                "                 }\n\n");

            var problem3 = new Problems(3, "Largest prime factor", "\nProblem 3: Largest prime factor\n" +
                                                                   "----------------------------------\n" +
                                                                   "The prime factors of 13195 are 5,7,13 and 29.\n" +
                                                                   "What is the largest prime factor of the number 600851475143 ?",
                "function primeFactor(number)\n " +
                "{primeArray = [];\n" +
                "for (i = 2; i <= number; i++){\n" +
                "if (number % i === 0){\n" +
                "for (j = 3; j <= i; j += 2){\n" +
                "if (i % j == 0){\n" +
                "number /= i;\n" +
                "primeArray.push(i);\n" +
                "}\n" +
                "}\n" +
                "}\n" +
                "}\n" +
                "console.log(Math.max(...primeArray));\n" +
                "console.log(primeArray[primeArray.length - 1]);\n" +
                "}\n" +
                "primeFactor(600851475143);\n\n" +
                "             ANSWER - 6857");

            var problem4 = new Problems(4, "Largest palindrome product", "\nProblem 4 Largest palindrome product\n" +
                                                                         "----------------------------------\n" +
                                                                         "A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 × 99.\n" +
                                                                         "Find the largest palindrome made from the product of two 3 - digit numbers..\n",
                "function largestThreeDigitPalindrome() {\n" +
                " palindromes = [];for (j = 0; j < 999; j++){\n" +
                "for (i = 0; i < 999; i++){\n" +
                "var result = (j * i).toString();\n" +
                "var reversedResult = result\n" +
                ".split('')\n" +
                ".reverse('')\n" +
                ".join('');\n" +
                "if (result === reversedResult){\n" +
                "palindromes.push(result);\n" +
                "}\n" +
                "}\n" +
                "}\n" +
                "console.log(Math.max(...palindromes));\n" +
                "}\n" +
                "largestThreeDigitPalindrome();\n" +
                "ANSWER - 906609");


            var problem5 = new Problems(5, "Smallest multiple product", "\nProblem 5 Smallest multiple product\n" +
                                                                        "----------------------------------\n" +
                                                                        "2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder\n" +
                                                                        "What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20 ?\n",
                "function smallestProduct() {\n" +
                "for (i = 1; i < 232792561; i++)\n" +
                "{dividable = true;\n" +
                "for (j = 2; j < 20; j++){\n" +
                "if (i % j != 0){\n" +
                "dividable = false;\n" +
                "}\n" +
                "}\n" +
                "if (dividable == true){\n" +
                "console.log(i);\n" +
                "}\n" +
                "}\n" +
                "}\n" +
                "smallestProduct();\n" +
                "ANSWER - 232792560");

            ListOfProblems.Add(problem1);
            ListOfProblems.Add(problem2);
            ListOfProblems.Add(problem3);
            ListOfProblems.Add(problem4);
            ListOfProblems.Add(problem5);


        }











        //private static void Problem1()
        //{
        //    Console.WriteLine("\nProblem 1: Multiple of 3 and 5\n" +
        //                      "----------------------------------\n" +
        //                      "If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.\n" +
        //                      "The sum of these multiples is 23.\nFind the sum of all the multiples of 3 or 5 below 1000\n\n" +
        //                      "Press any key to see the answer");
        //}

        //// private static List<Problems> Solution1()
        // {

        //     Console.WriteLine("\nAnswer: Multiple of 3 and 5\n" +
        //                       "----------------------------------\n");


        //     Console.WriteLine(
        //         "Run a for loop for iterations up to 1000.\n"
        //         + "Run an if statement to see if the number generate is divisible by 3 or 5 with a remainder of 0.\n"
        //         + "If this is true, print the number \n\n\n");

        //     Console.ForegroundColor = ConsoleColor.Yellow;
        //     Console.WriteLine("            Function ThreeAndFive() { \n" +
        //                       "              for (i = 0; i < 1000; i++)\n" +
        //                       "                 {\n" +
        //                       "              if (i % 3 === 0 || i % 5 === 0)\n" +
        //                       "              console.log(i);\n" +
        //                       "                 }\n" +
        //                       "               }\n");

        //     Console.ReadLine();


        // }


        // private static void Problem2()
        // {
        //     Console.WriteLine("\nProblem 2: Even Fibonacci numbers\n" +
        //                       "----------------------------------\n" +
        //                       "Each new term in the Fibonacci sequence is generated by adding the previous two terms.\n " +
        //                       "By starting with 1 and 2, the first 10 terms will be:\n\n" +
        //                       "1, 2, 3, 5, 8, 13, 21, 34, 55, 89, \n\n" +
        //                       "...By considering the terms in the Fibonacci sequence whose values do not exceed four million,\n" +
        //                       "find the sum of the even-valued terms..\n\n" +
        //                       "Press any key to see the answer");
        // }
        // private static void Solution2()
        // {
        //     Console.WriteLine("\nAnswer: Even Fibonacci numbers\n" +
        //                       "----------------------------------\n");


        //     Console.WriteLine(
        //         "Run a for loop for iterations up to 1000.\n"
        //         + "Run an if statement to see if the number generate is divisible by 3 or 5 with a remainder of 0.\n"
        //         + "If this is true, print the number \n\n\n");

        //     Console.ForegroundColor = ConsoleColor.Yellow;
        //     Console.WriteLine("            Function Fibonnaci() { \n" +
        //                       "              var a = 0\n" +
        //                       "              var b = 0\n" +
        //                       "              for (i = 0; i < 4000000; i++) {\n" +
        //                       "                 total = a;\n" +
        //                       "                 a = b;\n" +
        //                       "                 b = total + b;\n" +
        //                       "              if (total < 4000000 && total % 2 === 0) {\n" +
        //                       "              sum =+ total;\n" +
        //                       "                 }\n" +
        //                       "              }\n" +
        //                       "              console.log(i);\n" +
        //                       "                 }\n\n" +
        //                       "             ANSWER - 3524578");

        //     Console.ReadLine();
        // }





    }

}